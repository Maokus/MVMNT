⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯ Failed Tests 4 ⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯

 FAIL  src/audio/__tests__/audioFeatureAnalysis.test.ts > audio feature analysis > produces spectrogram, rms, and waveform tracks with aligned metadata
AssertionError: expected 3 to be 2 // Object.is equality

- Expected
+ Received

- 2
+ 3

 ❯ src/audio/__tests__/audioFeatureAnalysis.test.ts:57:31
     55|         expect(cache.analysisParams.calculatorVersions['mvmnt.spectrogram']).toBe(3);
     56|         expect(cache.hopTicks).toBeGreaterThan(0);
     57|         expect(cache.version).toBe(2);
       |                               ^
     58|         expect(cache.startTimeSeconds).toBe(0);
     59|         expect(cache.tempoProjection?.hopTicks).toBe(cache.hopTicks);

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/4]⎯

 FAIL  src/persistence/__tests__/audioFeatureCache.persistence.test.ts > audio feature cache persistence > exports and imports serialized caches with calculator metadata
AssertionError: expected 3 to be 2 // Object.is equality

- Expected
+ Received

- 2
+ 3

 ❯ src/persistence/__tests__/audioFeatureCache.persistence.test.ts:111:36
    109|             throw new Error('Expected inline audio feature cache payload');
    110|         }
    111|         expect(serialized.version).toBe(2);
       |                                    ^
    112|         expect(serialized.startTimeSeconds).toBe(0);
    113|         expect(serialized.tempoProjection?.hopTicks).toBe(120);

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/4]⎯

 FAIL  src/state/scene/__tests__/sceneStore.test.ts > sceneStore > imports audio feature macro fixtures with track bindings intact
AssertionError: expected undefined to be 'constant' // Object.is equality

- Expected: 
"constant"

+ Received: 
undefined

 ❯ src/state/scene/__tests__/sceneStore.test.ts:268:42
    266|         const bindings = store.getState().bindings.byElement['spectrum'];
    267|         expect(bindings?.featureTrackId).toEqual({ type: 'macro', macroId: 'macro.audio.track…
    268|         expect(bindings?.features?.type).toBe('constant');
       |                                          ^
    269|         expect(bindings?.analysisProfileId?.type).toBe('constant');
    270| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/4]⎯

 FAIL  src/workspace/form/inputs/__tests__/AudioFeatureDescriptorInput.test.tsx > AudioFeatureDescriptorInput > exposes channel selector when feature has multiple channels
AssertionError: expected undefined to be 'Right' // Object.is equality

- Expected: 
"Right"

+ Received: 
undefined

 ❯ src/workspace/form/inputs/__tests__/AudioFeatureDescriptorInput.test.tsx:178:38
    176|         const payload = handleChange.mock.calls.at(-1)?.[0];
    177|         expect(payload.channelIndex).toBe(1);
    178|         expect(payload.channelAlias).toBe('Right');
       |                                      ^
    179|     });
    180| });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/4]⎯

 Test Files  4 failed | 78 passed (82)
      Tests  4 failed | 255 passed (259)
   Start at  21:59:12
   Duration  9.23s (transform 1.60s, setup 6.41s, collect 9.82s, tests 1.33s, environment 29.75s, prepare 6.79s)